# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import safeentry_pb2 as safeentry__pb2


class SafeentryStub(object):
    """The safeentry service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/safeentry.Safeentry/Register',
                request_serializer=safeentry__pb2.RegisterRequest.SerializeToString,
                response_deserializer=safeentry__pb2.RegisterReply.FromString,
                )
        self.Login = channel.unary_unary(
                '/safeentry.Safeentry/Login',
                request_serializer=safeentry__pb2.LoginRequest.SerializeToString,
                response_deserializer=safeentry__pb2.LoginReply.FromString,
                )
        self.MOHLogin = channel.unary_unary(
                '/safeentry.Safeentry/MOHLogin',
                request_serializer=safeentry__pb2.MOHLoginRequest.SerializeToString,
                response_deserializer=safeentry__pb2.MOHLoginReply.FromString,
                )
        self.DeclareCovidCase = channel.unary_unary(
                '/safeentry.Safeentry/DeclareCovidCase',
                request_serializer=safeentry__pb2.DeclareCovidCaseRequest.SerializeToString,
                response_deserializer=safeentry__pb2.DeclareCovidCaseReply.FromString,
                )
        self.CheckIn = channel.unary_unary(
                '/safeentry.Safeentry/CheckIn',
                request_serializer=safeentry__pb2.CheckInRequest.SerializeToString,
                response_deserializer=safeentry__pb2.CheckInReply.FromString,
                )
        self.CheckOut = channel.unary_unary(
                '/safeentry.Safeentry/CheckOut',
                request_serializer=safeentry__pb2.CheckOutRequest.SerializeToString,
                response_deserializer=safeentry__pb2.CheckOutReply.FromString,
                )
        self.CheckInFamily = channel.stream_unary(
                '/safeentry.Safeentry/CheckInFamily',
                request_serializer=safeentry__pb2.CheckInFamilyRequest.SerializeToString,
                response_deserializer=safeentry__pb2.CheckInFamilyReply.FromString,
                )
        self.CheckOutFamily = channel.stream_unary(
                '/safeentry.Safeentry/CheckOutFamily',
                request_serializer=safeentry__pb2.CheckOutFamilyRequest.SerializeToString,
                response_deserializer=safeentry__pb2.CheckOutFamilyReply.FromString,
                )
        self.ListLocationsHistory = channel.unary_stream(
                '/safeentry.Safeentry/ListLocationsHistory',
                request_serializer=safeentry__pb2.ListLocationsHistoryRequest.SerializeToString,
                response_deserializer=safeentry__pb2.ListLocationsHistoryReply.FromString,
                )
        self.CheckCovidExposure = channel.unary_stream(
                '/safeentry.Safeentry/CheckCovidExposure',
                request_serializer=safeentry__pb2.CheckCovidExposureRequest.SerializeToString,
                response_deserializer=safeentry__pb2.CheckCovidExposureReply.FromString,
                )


class SafeentryServicer(object):
    """The safeentry service definition.
    """

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MOHLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeclareCovidCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckInFamily(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOutFamily(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLocationsHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCovidExposure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SafeentryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=safeentry__pb2.RegisterRequest.FromString,
                    response_serializer=safeentry__pb2.RegisterReply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=safeentry__pb2.LoginRequest.FromString,
                    response_serializer=safeentry__pb2.LoginReply.SerializeToString,
            ),
            'MOHLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.MOHLogin,
                    request_deserializer=safeentry__pb2.MOHLoginRequest.FromString,
                    response_serializer=safeentry__pb2.MOHLoginReply.SerializeToString,
            ),
            'DeclareCovidCase': grpc.unary_unary_rpc_method_handler(
                    servicer.DeclareCovidCase,
                    request_deserializer=safeentry__pb2.DeclareCovidCaseRequest.FromString,
                    response_serializer=safeentry__pb2.DeclareCovidCaseReply.SerializeToString,
            ),
            'CheckIn': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckIn,
                    request_deserializer=safeentry__pb2.CheckInRequest.FromString,
                    response_serializer=safeentry__pb2.CheckInReply.SerializeToString,
            ),
            'CheckOut': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOut,
                    request_deserializer=safeentry__pb2.CheckOutRequest.FromString,
                    response_serializer=safeentry__pb2.CheckOutReply.SerializeToString,
            ),
            'CheckInFamily': grpc.stream_unary_rpc_method_handler(
                    servicer.CheckInFamily,
                    request_deserializer=safeentry__pb2.CheckInFamilyRequest.FromString,
                    response_serializer=safeentry__pb2.CheckInFamilyReply.SerializeToString,
            ),
            'CheckOutFamily': grpc.stream_unary_rpc_method_handler(
                    servicer.CheckOutFamily,
                    request_deserializer=safeentry__pb2.CheckOutFamilyRequest.FromString,
                    response_serializer=safeentry__pb2.CheckOutFamilyReply.SerializeToString,
            ),
            'ListLocationsHistory': grpc.unary_stream_rpc_method_handler(
                    servicer.ListLocationsHistory,
                    request_deserializer=safeentry__pb2.ListLocationsHistoryRequest.FromString,
                    response_serializer=safeentry__pb2.ListLocationsHistoryReply.SerializeToString,
            ),
            'CheckCovidExposure': grpc.unary_stream_rpc_method_handler(
                    servicer.CheckCovidExposure,
                    request_deserializer=safeentry__pb2.CheckCovidExposureRequest.FromString,
                    response_serializer=safeentry__pb2.CheckCovidExposureReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'safeentry.Safeentry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Safeentry(object):
    """The safeentry service definition.
    """

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/Register',
            safeentry__pb2.RegisterRequest.SerializeToString,
            safeentry__pb2.RegisterReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/Login',
            safeentry__pb2.LoginRequest.SerializeToString,
            safeentry__pb2.LoginReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MOHLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/MOHLogin',
            safeentry__pb2.MOHLoginRequest.SerializeToString,
            safeentry__pb2.MOHLoginReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeclareCovidCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/DeclareCovidCase',
            safeentry__pb2.DeclareCovidCaseRequest.SerializeToString,
            safeentry__pb2.DeclareCovidCaseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/CheckIn',
            safeentry__pb2.CheckInRequest.SerializeToString,
            safeentry__pb2.CheckInReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/safeentry.Safeentry/CheckOut',
            safeentry__pb2.CheckOutRequest.SerializeToString,
            safeentry__pb2.CheckOutReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckInFamily(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/safeentry.Safeentry/CheckInFamily',
            safeentry__pb2.CheckInFamilyRequest.SerializeToString,
            safeentry__pb2.CheckInFamilyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckOutFamily(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/safeentry.Safeentry/CheckOutFamily',
            safeentry__pb2.CheckOutFamilyRequest.SerializeToString,
            safeentry__pb2.CheckOutFamilyReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLocationsHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/safeentry.Safeentry/ListLocationsHistory',
            safeentry__pb2.ListLocationsHistoryRequest.SerializeToString,
            safeentry__pb2.ListLocationsHistoryReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckCovidExposure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/safeentry.Safeentry/CheckCovidExposure',
            safeentry__pb2.CheckCovidExposureRequest.SerializeToString,
            safeentry__pb2.CheckCovidExposureReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
